# ----------------------------------
#             OPTIONS
# ----------------------------------
# https://github.com/tmux-plugins/tmux-sensible
set -g mouse on

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display
set -g display-time 500

# Refresh 'status-left' and 'status-right' more often (git status)
set -g status-interval 1

# Upgrade $TERM
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users (command prompt)
# https://unix.stackexchange.com/questions/383420/how-to-list-and-customize-tmuxs-key-bindings-applicable-for-command-mode
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on


# --------------------------------
#         PLUGIN SETTINGS
# --------------------------------
# Restore tmux environment after system restart
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'

# run '/opt/homebrew/opt/tpm/share/tpm/tpm'


# --------------------------------
#         KEY BINDINGS
# --------------------------------
# Remap prefix from 'C-b' to 'C-Space'
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix
display-message "prefix set"

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# Split panes using | and -
unbind '"'
unbind %
bind | split-window -h
bind - split-window -v

# Disable confirmation when closing a pane/window
bind x kill-pane
bind & kill-window

# Create new session
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"


# TODO: Improve keybinds for apps
# Go to Lazygit window or open it if it doesn't exist
# bind l run-shell 'zsh -c "source ~/.zshrc && tmux_goto_lazygit"'
bind l if-shell 'tmux list-windows | grep -q lazygit' 'select-window -t nvim' 'new-window -n lazygit "lazygit"'

# Go to opencode window or open it if it doesn't exist
bind o if-shell 'tmux list-windows | grep -q opencode' 'select-window -t opencode' 'new-window -n opencode "opencode -c"'

# Go to nvim window or open it if it doesn't exist
bind n if-shell 'tmux list-windows | grep -q nvim' 'select-window -t nvim' 'new-window -n nvim "nvim"'

# Go to zsh window or open it if it doesn't exist
bind z if-shell 'tmux list-windows | grep -q zsh' 'select-window -t zsh' 'new-window -n zsh'

# Go to yazi window or open it if it doesn't exist
bind y if-shell 'tmux list-windows | grep -q yazi' 'select-window -t yazi' 'new-window -n yazi "yazi"'

# Nvim <-> tmux
# https://github.com/aserowy/tmux.nvim

# Detect is current window/pane is running nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

# Navigate panes with Ctrl + hjkl, or send the keys to vim if in vim
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Cycle through windows with Alt + p/Tab
bind -n M-p previous-window
bind -n M-n next-window
bind-key -T copy-mode-vi 'M-p' select-window -n
bind-key -T copy-mode-vi 'M-n' select-window -p

# Resize panes with Ctrl + arrow keys, or send the keys to vim if in vim
bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-Left' 'resize-pane -L 5'
bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right' 'resize-pane -R 5'
bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-Down' 'resize-pane -D 5'
bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-Up' 'resize-pane -U 5'
bind-key -T copy-mode-vi 'C-Left' resize-pane -L 5
bind-key -T copy-mode-vi 'C-Right' resize-pane -R 5
bind-key -T copy-mode-vi 'C-Down' resize-pane -D 5
bind-key -T copy-mode-vi 'C-Up' resize-pane -U 5

# Swap panes with prefix + arrow keys
bind Left if-shell "$is_vim" 'send-keys C-Space Left' 'swap-pane -s "{left-of}"'
bind Right if-shell "$is_vim" 'send-keys C-Space Right' 'swap-pane -s "{right-of}"'
bind Down if-shell "$is_vim" 'send-keys C-Space Down' 'swap-pane -s "{down-of}"'
bind Up if-shell "$is_vim" 'send-keys C-Space Up' 'swap-pane -s "{up-of}"'
bind-key -T copy-mode-vi 'Left' swap-pane -s "{left-of}"
bind-key -T copy-mode-vi 'Right' swap-pane -s "{right-of}"
bind-key -T copy-mode-vi 'Down' swap-pane -s "{down-of}"
bind-key -T copy-mode-vi 'Up' swap-pane -s "{up-of}"


# --------------------------------
#            APPEARANCE
# --------------------------------
# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# panes
# use bg color to hide borders
# set -g pane-border-style 'fg=#1a1e20'
# set -g pane-active-border-style 'fg=#1a1e20'
set -g pane-border-style 'fg=#202527'
set -g pane-active-border-style 'fg=#202527'


# statusbar
set -g status-position bottom
set -g status-justify centre
set -g status-style 'fg=color0,bg=color2'
setw -g window-style 'fg=#c1c3c4,bg=#1a1e20'
set -g status-left '#[fg=color0,bg=color2,bold] #S '
setw -g window-status-current-format '#[fg=color0,bg=color2,bold]#W'
setw -g window-status-format '#[fg=color0,bg=color2]#W'

# Git status scripts for tmux status bar
TMUX_SCRIPTS_DIR="$HOME/dots/scripts"
set -g status-right "#[fg=color0,bg=color2] "\
"#($TMUX_SCRIPTS_DIR/git-sync-status.sh #{pane_current_path})"\
"#($TMUX_SCRIPTS_DIR/git-status.sh #{pane_current_path})"\
"#[bold]#($TMUX_SCRIPTS_DIR/git-branch-name.sh #{pane_current_path}) "

# Display message when config is reloaded
set -g message-style 'fg=color0,bg=color2'

# Add display message for reloading config
# because I have thrust issues.
display-message " tmux config reloaded!"
